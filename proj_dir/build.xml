<project name="pa1" default="compile" basedir=".">

   <description>Thrift Java pa1</description>
 
   <property name="src.dir" location="src" />
   <property name="gen.dir" location="gen-java" />
   <property name="build.dir" location="build" />
   <property name="output.dir" location="output_dir"/>
   <property name="log.dir" location="log" />
   <property environment="env"/>
   
   <path id="libs.classpath">
      <fileset dir="${env.THRIFT_LIB_PATH}">
         <include name="libthrift*.jar"/>
         <exclude name="libthrift*test.jar"/>
         <exclude name="libthrift*source.jar"/>
         <exclude name="libtrift*javadoc.jar"/>
      </fileset>
      <fileset dir="${env.THRIFT_LIB_PATH}/../deps">
         <include name="*.jar"/>   
      </fileset>
      <fileset dir="${env.OPENCV_LIB_PATH}"/>
      <fileset dir="${env.PROJ_PATH}"/>
   </path>

   <path id="thrift_compiler.classpath">
      <fileset dir="${env.THRIFT_LIB_PATH}/../../../../compiler/cpp/src/thrift"/>
   </path>

   <path id="build.classpath">
      <path refid="libs.classpath" />
      <pathelement path="${gen.dir}" />
   </path>

   <path id="pa1.classpath">
      <path refid="build.classpath"/>   
      <pathelement path="${build.dir}"/>
   </path>

   <!-- initialize directory structure -->
   <target name="init">
      <tstamp/>
      <mkdir dir="${build.dir}"/>
      <mkdir dir="${log.dir}"/>
      <mkdir dir="${output.dir}"/>
   </target>

   <!-- Generate the thrift gen-java source -->
   <target name="generate">
      <exec failonerror="true" executable="../../thrift-0.15.0/compiler/cpp/thrift">
         <arg line="--gen java -r pa1.thrift"/>
      </exec>
   </target>

   <!-- Compile all source files -->
   <target name="compile" depends="init, generate">
      <javac compiler="modern" includeantruntime="false" srcdir="${gen.dir}" destdir="${build.dir}" classpathref="libs.classpath" />
      <javac compiler="modern" includeantruntime="false" srcdir="${src.dir}" destdir="${build.dir}" classpathref="build.classpath" />
   </target>

   <!-- Run client -->
   <target name="client" depends="compile, clean_output">
      <echo>tutorial client simple:</echo>
      <java classpathref="pa1.classpath" output="${log.dir}/client_log.txt" failonerror="false" fork="true" classname="client/JavaClient"/>
   </target>
   
   <!-- Run server -->
   <target name="server" depends="compile">
      <java classpathref="pa1.classpath" output="${log.dir}/server_log.txt" failonerror="false" fork="true" classname="server/JavaServer"/> 
   </target>

   <!-- Run node zero -->
   <target name="node_zero" depends="compile">
      <java classpathref="pa1.classpath" output="${log.dir}/node_zero_log.txt" failonerror="false" fork="true" classname="node/JavaNode"> 
         <arg line="0"/>
      </java>
   </target>

   <!-- Run node one -->
   <target name="node_one" depends="compile">
      <java classpathref="pa1.classpath" output="${log.dir}/node_one_log.txt" failonerror="false" fork="true" classname="node/JavaNode"> 
         <arg line="1"/>
      </java>
   </target>

   <!-- Run node two -->
   <target name="node_two" depends="compile">
      <java classpathref="pa1.classpath" output="${log.dir}/node_two_log.txt" failonerror="false" fork="true" classname="node/JavaNode"> 
         <arg line="2"/>
      </java>
   </target>

   <!-- Run node three -->
   <target name="node_three" depends="compile">
      <java classpathref="pa1.classpath" output="${log.dir}/node_three_log.txt" failonerror="false" fork="true" classname="node/JavaNode"> 
         <arg line="3"/>
      </java>
   </target>

   <!-- Clean output_dir -->
   <target name="clean_output">
      <delete>
         <fileset dir="${output.dir}">
            <include name="*"/>
         </fileset>
      </delete>
   </target>

   <!-- clean everything -->
   <target name="clean">
      <delete dir="${output.dir}"/>
      <delete dir="${build.dir}"/>
      <delete dir="${gen.dir}"/>
      <delete dir="${log.dir}"/>
   </target>
</project>