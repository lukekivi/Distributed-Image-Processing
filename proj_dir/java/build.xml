<project name="pa1" default="compile" basedir=".">

   <description>Thrift Java pa1</description>
 
   <property name="src.dir" location="src" />
   <property name="gen.dir" location="gen-java" />
   <property name="build.dir" location="build" />
   <property environment="env"/>
   
   <path id="libs.classpath">
      <fileset dir="${env.THRIFT_LIB_PATH}">
         <include name="libthrift*.jar"/>
         <exclude name="libthrift*test.jar"/>
         <exclude name="libthrift*source.jar"/>
         <exclude name="libtrift*javadoc.jar"/>
      </fileset>
      <fileset dir="${env.THRIFT_LIB_PATH}/../deps">
         <include name="*.jar"/>   
      </fileset>
      <fileset dir="${env.OPENCV_LIB_PATH}"/>
      <fileset dir="${env.PROJ_PATH}"/>
   </path>

   <path id="thrift_compiler.classpath">
      <fileset dir="${env.THRIFT_LIB_PATH}/../../../../compiler/cpp/src/thrift"/>
   </path>

   <path id="build.classpath">
      <path refid="libs.classpath" />
      <pathelement path="${gen.dir}" />
   </path>

   <path id="pa1.classpath">
      <path refid="build.classpath"/>   
      <pathelement path="${build.dir}"/>
   </path>

   <target name="init">
    <tstamp/>
    <mkdir dir="${build.dir}"/>
    <mkdir dir="${build.dir}/log"/>
  </target>

  <target name="generate">
      <!-- Generate the thrift gen-java source -->
      <exec failonerror="true" executable="../../../thrift-0.15.0/compiler/cpp/thrift">
         <arg line="--gen java -r ../pa1.thrift"/>
      </exec>
   </target>

  <target name="compile" depends="init, generate">
    <javac compiler="modern" includeantruntime="false" srcdir="${gen.dir}" destdir="${build.dir}" classpathref="libs.classpath" />
    <javac compiler="modern" includeantruntime="false" srcdir="${src.dir}" destdir="${build.dir}" classpathref="build.classpath" />
  </target>

  
   <target name="client" depends="compile" description="Run a pa1 client">
      <echo>tutorial client simple:</echo>
      <java classpathref="pa1.classpath" failonerror="false" fork="true" classname="client/JavaClient"/>
   </target>
   
   
   <target name="server" depends="compile" description="Run a pa1 server">
      <java classpathref="pa1.classpath" failonerror="false" fork="true" classname="server/JavaServer"> 
         <arg line="${build.dir}/log/server_log.txt"/>
      </java>
   </target>

   <target name="node_zero" depends="compile" description="Run node zero">
      <java classpathref="pa1.classpath" failonerror="false" fork="true" classname="node/JavaNode"> 
         <arg line="0"/>
         <arg line="${build.dir}/log/node_0_log.txt"/>
      </java>
   </target>

   <target name="node_one" depends="compile" description="Run node one">
      <java classpathref="pa1.classpath" failonerror="false" fork="true" classname="node/JavaNode"> 
         <arg line="1"/>
         <arg line="${build.dir}/log/node_1_log.txt"/>
      </java>
   </target>

   <target name="node_two" depends="compile" description="Run node two">
      <java classpathref="pa1.classpath" failonerror="false" fork="true" classname="node/JavaNode"> 
         <arg line="2"/>
         <arg line="${build.dir}/log/node_2_log.txt"/>
      </java>
   </target>

   <target name="node_three" depends="compile" description="Run node three">
      <java classpathref="pa1.classpath" failonerror="false" fork="true" classname="node/JavaNode"> 
         <arg line="3"/>
         <arg line="${build.dir}/log/node_3_log.txt"/>
      </java>
   </target>
   
   <target name="clean" description="Clean output directories">
      <delete dir="${build.dir}"/>
      <delete dir="${gen.dir}"/>
   </target>
</project>